{
    "package": "native/android_ndk",
    "version": "r28c",
    "type": "native",
    "download": {
        "kind": "none"
    },
    "dependencies": [
        "all:native/bison",
        "all:native/make",
        "all:native/texinfo",
        "all:native/repo",
        "all:native/python@3.11.13"
    ],
    "patches": [
        "no_ctest.patch"
    ],
    "build": {
        "env": [
            "aarch64-linux-android:config_opts=--arch arm",
            "x86_64-linux-android:config_opts=--arch x86_64",
            "armv7a-linux-androideabi:config_opts=--arch arm64",
            "i686-linux-android:config_opts=--arch x86",
            "aarch64-linux-android:BUILDLIB_HOST=aarch64-linux-android",
            "x86_64-linux-android:BUILDLIB_HOST=x86_64-linux-android",
            "armv7a-linux-androideabi:BUILDLIB_HOST=armv7a-linux-androideabi",
            "i686-linux-android:BUILDLIB_HOST=i686-linux-android",
            "*-android*:API_LEVEL=21"
        ],
        "steps": [
            "*-android*:mkdir -p $HOME",
            "*-android*:repo init -u https://android.googlesource.com/platform/manifest -b ndk-r28c --partial-clone",
            "*-android*:if [ $(uname) = 'Darwin' ]; then echo -n darwin > .sys_detected.txt ; repo manifest | grep -v windows | grep -v linux > .repo/manifests/striped.xml ; fi",
            "*-android*:if [ $(uname) = 'Windows' ]; then echo -n windows64 > .sys_detected.txt ; repo manifest | grep -v darwin | grep -v linux > .repo/manifests/striped.xml ; fi",
            "*-android*:if [ $(uname) = 'Linux' ]; then echo -n linux > .sys_detected.txt ; repo manifest | grep -v windows | grep -v darwin > .repo/manifests/striped.xml ; fi",
            "*-android*:if [ ! -f .sys_detected.txt ]; then echo \"No file .sys_detected.txt. environment not implemented for: $(uname)\" && exit 1 ; fi",
            "*-android*:export SYSTEM_TARGET=$(cat .sys_detected.txt) ; echo Performing as host $SYSTEM_TARGET ",
            "*-android*:repo init -u https://android.googlesource.com/platform/manifest -b ndk-r28c --partial-clone -m striped.xml",
            "*-android*:repo sync",
            "*-android*:pip3 install poetry",
            "*-android*:cd ndk && poetry install",
            "*-android*:mkdir -p prebuilts/clang/host/darwin-x86/clang-r530567e",
            "*-android*:touch prebuilts/clang/host/darwin-x86/clang-r530567e/NOTICE",
            "*-android*:mkdir -p prebuilts/clang/host/windows-x86/clang-r530567e",
            "*-android*:touch prebuilts/clang/host/windows-x86/clang-r530567e/NOTICE",
            "*-android*:export SYSTEM_TARGET=$(cat .sys_detected.txt) ; cd ndk && poetry run ./checkbuild.py --no-build-tests --no-package-tests --system $SYSTEM_TARGET",
            "*-android*:out/android-ndk-r28c/build/tools/make_standalone_toolchain.py --api $API_LEVEL --install-dir $PWD/toolchain --stl=libc++ $config_opts",
            "*-android*:mkdir -p $STAGING_DIR$PREFIX/native",
            "*-android*:mv $PWD/toolchain/* $STAGING_DIR$PREFIX/native",
            "*-android*:cp $STAGING_DIR$PREFIX/native/bin/llvm-ar $STAGING_DIR$PREFIX/native/bin/$BUILDLIB_HOST-ar",
            "*-android*:cp $STAGING_DIR$PREFIX/native/bin/$BUILDLIB_HOST$API_LEVEL-clang $STAGING_DIR$PREFIX/native/bin/$BUILDLIB_HOST-clang",
            "*-android*:cp $STAGING_DIR$PREFIX/native/bin/$BUILDLIB_HOST$API_LEVEL-clang++ $STAGING_DIR$PREFIX/native/bin/$BUILDLIB_HOST-clang++",
            "*-android*:cp $STAGING_DIR$PREFIX/native/bin/llvm-ranlib $STAGING_DIR$PREFIX/native/bin/$BUILDLIB_HOST-ranlib",
            "*-android*:cp $STAGING_DIR$PREFIX/native/bin/llvm-ar $STAGING_DIR$PREFIX/native/bin/$BUILDLIB_HOST-ar"
        ]
    }
}